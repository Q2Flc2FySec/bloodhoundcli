services:
  postgres:
    container_name: postgres
    image: docker.io/library/postgres:13.2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: bloodhound
      POSTGRES_DATABASE: bloodhound
    volumes:
    - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
      - CMD-SHELL
      - 'pg_isready -U bloodhound -d bloodhound -h 127.0.0.1 -p 5432'
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
    - default

  neo4j:
    container_name: neo4j
    image: ghcr.io/dadevel/neo4j:4.4.12
    environment:
      NEO4J_AUTH: neo4j/bloodhound
      NEO4J_dbms_allow__upgrade: 'true'
    ports:
    - 127.0.0.1:7687:7687
    - 127.0.0.1:7474:7474
    volumes:
    - neo4j-data:/data
    healthcheck:
      test:
      - CMD-SHELL
      - 'wget -O /dev/null -q http://localhost:7474'
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
    - default

  bloodhound:
    container_name: bloodhound
    image: docker.io/specterops/bloodhound:latest
    environment:
      bhe_disable_cypher_qc: 'false'
      bhe_graph_query_memory_limit: 8  # 8gb
      # source: https://x.com/olafhartong/status/1796117974790680821
      bhe_disable_cypher_complexity_limit: 'true'
      bhe_enable_cypher_mutations: 'true'
    ports:
    - 127.0.0.1:7575:7575
    volumes:
    - ./bloodhound.config.json:/bloodhound.config.json:ro
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    networks:
    - default

volumes:
  postgres-data:
  neo4j-data:

networks:
  default:
